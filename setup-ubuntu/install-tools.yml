---
- hosts: localhost
  connection: local
  become: True
  gather_facts: False

  vars:
    - user: rafael

  tasks:
    - name: Update and upgrade apt packages
      become: True
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Get Kernel version
      shell: uname -r
      register: kernel_shell_output

    - debug: msg="linux-headers-{{ kernel_shell_output.stdout}}"

    - name: install linux-headers
      apt: name="linux-headers-{{ kernel_shell_output.stdout}}" state=present

    - name: Install Tools
      apt:
        state: latest
        name:
          - build-essential
          - apt-transport-https
          - curl
          - wget
          - vim
          - python3
          - python3-pip
          - python3-virtualenv
          - xclip
          - jq
          - software-properties-common
          - git
          - htop
          - vlc
          - tmux
          - snapd
          - unrar
          - keepassx
          - gimp
          - gparted
          - gnome-pie
          - vokoscreen
          - numlockx

    - name: install parcellite
      apt:
        state: latest
        name: parcellite

    - name: check parcellite conf folder exists
      stat:
        path: "/home/{{ user }}/.config/parcellite/"
      register: parcellite_conf_folder

    - name: create parcellite conf folder if not exists
      file:
        path: "/home/{{ user }}/.config/parcellite/"
        state: directory
      when: not parcellite_conf_folder.stat.exists

    - name: configure parcellite
      get_url:
        url: https://raw.githubusercontent.com/carreirorco/dotfiles/master/parcellite/parcelliterc
        dest: "/home/{{ user }}/.config/parcellite/parcelliterc"
        mode: '0644'
        force: yes

    - name: install terminator
      apt:
        state: latest
        name: terminator

    - name: Install a .deb package for google chrome.
      apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

    - name: install flameshot
      apt:
        state: latest
        name: flameshot

    - name: install virtualbox
      apt:
        state: latest
        name: [virtualbox, linux-headers-virtual, virtualbox-dkms]

    - name: install vagrant
      apt:
        state: latest
        name: vagrant

    - name: install visual studio code
      snap:
        name: code
        state: present
        classic: yes

    - name: install dropbox
      apt:
        deb: https://www.dropbox.com/download?dl=packages/ubuntu/dropbox_2020.03.04_amd64.deb

    - name: install slack
      snap:
        name: slack
        state: present
        classic: yes

    - name: install zoom-client
      snap:
        name: zoom-client
        state: present

    - name: install skype
      snap:
        name: skype
        state: present
        classic: yes

    - name: install postman
      snap:
        name: postman
        state: present

    - name: install spotify
      snap:
        name: spotify
        state: present

    - name: install retroarch
      snap:
        name: retroarch
        state: present

    - name: install 0ad game
      apt:
        name: 0ad
        state: latest

    - name: install kubectl 1.18
      get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        mode: '0755'
        force: yes
      tags: kubectl

    - name: install helm 2.16
      get_url:
        url: https://git.io/get_helm.sh
        dest: /usr/local/bin/helm
        mode: '0755'
        force: yes
      tags: helm

    - name: install atom editor code
      apt:
        deb: https://atom.io/download/deb
        state: present
      tags: atom

    - name: install atom plugins
      become: no
      command: apm install {{ item }}
      loop:
        - termination
        - language-docker
        - atom-file-icons
        - ide-golang
        - markdown-it-preview
        - language-ini
        - atom-jinja2
      tags: atom

    - name: Change keybind "ctrl+`" to "ctrl-shift-dead"
      lineinfile:
        path: /home/{{ user }}/.atom/packages/termination/keymaps/termination.cson
        regexp: "  'ctrl-`': 'termination:toggle'"
        line:   "  'ctrl-shift-dead': 'termination:toggle'"
      tags: atom
